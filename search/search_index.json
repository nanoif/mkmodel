{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"home"},{"location":"general/","text":"Paragraph \ud83c\udfb6 \u4e00\u8bf4\u8d77\u7985\u667a\u5185\u4f9b\u7684\u9f3b\u5b50\uff0c\u6c60\u5c3e\u5730\u65b9\u662f\u6ca1\u4e00\u4e2a\u4e0d\u77e5\u9053\u7684\u3002\u957f\u6709\u4e94\u516d\u5bf8\uff0c\u4ece\u4e0a\u5507\u7684\u4e0a\u9762\u76f4\u62d6\u5230\u4e0b\u988f\u7684\u4e0b\u9762\u53bb\u3002\u5f62\u72b6\u662f\u4ece\u9876\u5230\u5e95\uff0c\u4e00\u6837\u7684\u7c97\u7ec6\u3002\u7b80\u6377\u8bf4\uff0c\u4fbf\u662f\u4e00\u6761\u7ec6\u957f\u7684\u9999\u80a0\u4f3c\u7684\u4e1c\u897f\uff0c\u5728\u8138\u4e2d\u592e\u62d6\u7740\u7f62\u4e86\u3002 \u4e94\u5341\u591a\u5c81\u7684\u5185\u4f9b\u662f\u4ece\u8fd8\u505a\u6c99\u5f25\u7684\u5f80\u6614\u4ee5\u6765\uff0c\u4e00\u76f4\u5230\u751f\u4e86\u5185\u9053\u573a\u4f9b\u5949\u7684\u73b0\u5728\u4e3a\u6b62\uff0c\u5fc3\u5e95\u91cc\u59cb\u7ec8\u82e6\u7740\u8fd9\u9f3b\u5b50\u3002\u8fd9\u4e5f\u4e0d\u5355\u56e0\u4e3a\u81ea\u5df1\u662f\u5e94\u8be5\u4e00\u5fc3\u6e34\u4ef0\u7740\u5c06\u6765\u7684\u51c0\u571f\u7684\u548c\u5c1a\uff0c\u4e8e\u9f3b\u5b50\u7684\u70e6\u607c\uff0c\u4e0d\u5f88\u76f8\u5b9c\uff1b\u5176\u5b9e\u5012\u5728\u4e0d\u613f\u610f\u6709\u4eba\u77e5\u9053\u4ed6\u4ecb\u610f\u4e8e\u9f3b\u5b50\u7684\u4e8b\u3002\u5185\u4f9b\u5728\u5e73\u65f6\u7684\u8c08\u8bdd\u91cc\uff0c\u4e5f\u6700\u6015\u8bf4\u51fa\u9f3b\u5b50\u8fd9\u4e00\u53e5\u8bdd\u6765\u3002 \u5185\u4f9b\u4e4b\u6240\u4ee5\u70e6\u817b\u90a3\u9f3b\u5b50\u7684\u7406\u7531\uff0c\u5927\u6982\u6709\u4e8c\uff0c\u2014\u2014\u5176\u4e00\uff0c\u56e0\u4e3a\u9f3b\u5b50\u4e4b\u957f\uff0c\u5728\u5b9e\u9645\u4e0a\u5f88\u4e0d\u4fbf\u3002\u7b2c\u4e00\u662f\u5403\u996d\u65f6\u5019\uff0c\u72ec\u81ea\u4e0d\u80fd\u5403\u3002\u5018\u82e5\u72ec\u81ea\u5403\u65f6\uff0c\u9f3b\u5b50\u4fbf\u8fbe\u5230\u7897\u91cc\u7684\u996d\u4e0a\u9762\u53bb\u4e86\u3002\u4e8e\u662f\u5185\u4f9b\u53eb\u4e00\u4e2a\u5f1f\u5b50\u5750\u5728\u6b63\u5bf9\u9762\uff0c\u5f53\u5403\u996d\u65f6\uff0c\u4f7f\u4ed6\u7528\u4e00\u6761\u5e7f\u4e00\u5bf8\u957f\u4e8c\u5c3a\u7684\u6728\u677f\uff0c\u6380\u8d77\u9f3b\u5b50\u6765\u3002\u4f46\u662f\u8fd9\u6837\u7684\u5403\u996d\u6cd5\uff0c\u5728\u80fd\u6380\u7684\u5f1f\u5b50\u548c\u6240\u6380\u7684\u5185\u4f9b\uff0c\u90fd\u4e0d\u662f\u5bb9\u6613\u7684\u4e8b\u3002\u6709\u4e00\u56de\uff0c\u66ff\u4ee3\u8fd9\u5f1f\u5b50\u4e2d\u7ae5\u5b50\u6253\u4e86\u4e00\u4e2a\u55b7\u568f\uff0c\u56e0\u800c\u624b\u4e00\u6296\uff0c\u90a3\u9f3b\u5b50\u4fbf\u843d\u5230\u7ca5\u91cc\u53bb\u4e86\u7684\u6545\u4e8b\uff0c\u90a3\u65f6\u662f\u8fde\u4eac\u90fd\u90fd\u4f20\u904d\u7684\u3002\u2014\u2014\u7136\u800c\u8fd9\u4e8b\uff0c\u5374\u8fd8\u4e0d\u662f\u5185\u4f9b\u4e4b\u6240\u4ee5\u4ee5\u9f3b\u5b50\u4e3a\u82e6\u7684\u91cd\u5927\u7684\u7406\u7531\uff0c\u5185\u4f9b\u4e4b\u6240\u4ee5\u4e3a\u82e6\u8005\uff0c\u5176\u5b9e\u5374\u5728\u4e4e\u56e0\u8fd9\u9f3b\u5b50\u800c\u4f24\u4e86\u81ea\u5c0a\u5fc3\u8fd9\u4e00\u70b9\u3002 \u6c60\u5c3e\u7684\u767e\u59d3\u4eec\uff0c\u66ff\u6709\u7740\u8fd9\u6837\u9f3b\u5b50\u7684\u5185\u4f9b\u8bbe\u60f3\uff0c\u8bf4\u5185\u4f9b\u5e78\u800c\u662f\u51fa\u5bb6\u4eba\uff1b\u56e0\u4e3a\u90fd\u4ee5\u4e3a\u8fd9\u6837\u7684\u9f3b\u5b50\uff0c\u662f\u6ca1\u6709\u5973\u4eba\u80af\u5ac1\u7684\u3002\u5176\u4e2d\u751a\u800c\u81f3\u4e8e\u8fd8\u6709\u8fd9\u6837\u7684\u6279\u8bc4\uff0c\u8bf4\u662f\u6b63\u56e0\u4e3a\u8fd9\u6837\u9f3b\u5b50\uff0c\u6240\u4ee5\u624d\u6765\u505a\u548c\u5c1a\u3002\u7136\u800c\u5185\u4f9b\u81ea\u5df1\uff0c\u5374\u5e76\u4e0d\u89c9\u5f97\u505a\u4e86\u548c\u5c1a\uff0c\u4fbf\u51cf\u4e86\u51e0\u5206\u9f3b\u5b50\u7684\u70e6\u607c\u53bb\u3002\u5185\u4f9b\u7684\u81ea\u5c0a\u5fc3\uff0c\u8f83\u4e4b\u4e3a\u5a36\u59bb\u8fd9\u7c7b\u7ed3\u679c\u7684\u4e8b\u5b9e\u6240\u5de6\u53f3\u7684\u4e1c\u897f\uff0c\u5fae\u5999\u5f97\u591a\u591a\u4e86\u3002\u56e0\u6b64\u5185\u4f9b\u5728\u79ef\u6781\u7684\u548c\u6d88\u6781\u7684\u4e24\u65b9\u9762\uff0c\u8981\u5c06\u8fd9\u81ea\u5c0a\u5fc3\u7684\u6bc1\u635f\u6062\u590d\u8fc7\u6765\u3002 List \ud83c\udfb6 \u4e0a\u9762\u7684\u4f8b\u5b50\u5047\u8bbe\u6570\u636e\u96c6\u7684\u57fa\u6570\u4e3a 1\u3002\u5f53\u6570\u636e\u96c6\u5f88\u5927\u65f6: \u6279\u91cf\u68af\u5ea6\u4e0b\u964d (BGD):\u2003\u7406\u60f3\u7684\u68af\u5ea6\u4e0b\u964d\u65b9\u5f0f\uff0c\u5bf9\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u8f93\u5165\u8ba1\u7b97\u8bef\u5dee\uff0c\u5c06\u6240\u6709\u8bef\u5dee\u7d2f\u52a0\u53d6\u5e73\u5747\u4f5c\u4e3a\u6700\u7ec8\u7684\u4ee3\u4ef7\u51fd\u6570\uff0c\u5e76\u4ee5\u6b64\u66f4\u65b0\u53c2\u6570 \u5168\u6570\u636e\u96c6\u8ba1\u7b97\u4ee3\u4ef7\u51fd\u6570\uff0c\u66f4\u597d\u5730\u4ee3\u8868\u603b\u4f53\uff0c\u7b97\u51fa\u6781\u5c0f\u503c\u540e\uff0c\u4fdd\u8bc1\u68af\u5ea6\u4e3a 00 \u5bf9\u6bcf\u4e2a\u53c2\u6570\u6c42\u504f\u5bfc\u9700\u8981\u904d\u5386\u6570\u636e\u96c6\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u5f88\u6162 \u5bb9\u6613\u9677\u5165\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u968f\u673a\u68af\u5ea6\u4e0b\u964d (stochastic, SGD):\u2003\u6bcf\u8ba1\u7b97\u4e00\u4e2a\u6837\u672c\u7684\u524d\u5411\u4f20\u64ad\u540e\uff0c\u5c31\u8ba1\u7b97\u5b83\u7684\u4ee3\u4ef7\uff0c\u5e76\u4ee5\u4e4b\u4e3a\u76ee\u6807\u51fd\u6570\u66f4\u65b0\u53c2\u6570 \u901f\u5ea6\u5feb\uff0c\u968f\u673a\u6027\u6709\u5229\u4e8e\u8df3\u51fa\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u51c6\u786e\u5ea6\u4e0b\u964d\uff0c\u89e3\u7a7a\u95f4\u641c\u7d22\u6bd4\u8f83\u76f2\u76ee\uff0c\u4f46\u5927\u4f53\u4e0a\u662f\u6700\u4f18\u65b9\u5411 \u82e5\u6536\u655b\uff0closs \u5448\u73b0\u4e0a\u4e0b\u9707\u8361\u3001\u4f46\u603b\u4f53\u4e0a\u4e0b\u964d\u7684\u8d8b\u52bf \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d (Mini-BGD):\u2003SGD \u548c BGD \u7684\u6298\u4e2d\uff0c\u628a\u6570\u636e\u96c6\u968f\u673a\u5206\u6210\u82e5\u5e72 mini batch\uff0c\u6bcf\u6b21\u8fed\u4ee3\u4f7f\u7528 batch size \u4e2a\u6837\u672c\u8fdb\u884c\u66f4\u65b0 \u5408\u7406\u5730\u589e\u5927 batch \u53ef\u5145\u5206\u5229\u7528 GPU\uff0c\u63d0\u9ad8\u5185\u5b58\u5229\u7528\u7387\uff0c\u51cf\u5c0f loss \u7684\u9707\u8361\uff0c\u5c0f batch \u5f15\u5165\u968f\u673a\u6027\uff0c\u5c3d\u7ba1\u8ba1\u7b97\u901f\u5ea6\u5feb\uff0c\u4f46\u540c\u6837\u53ef\u80fd\u9020\u6210\u6536\u655b\u901f\u5ea6\u6162\u751a\u81f3\u4e0d\u6536\u655b \u5408\u7406\u5730\u589e\u5927 batch \u53ef\u5145\u5206\u5229\u7528 GPU\uff0c\u63d0\u9ad8\u5185\u5b58\u5229\u7528\u7387\uff0c\u51cf\u5c0f loss \u7684\u9707\u8361\uff0c\u5c0f batch \u5f15\u5165\u968f\u673a\u6027\uff0c\u5c3d\u7ba1\u8ba1\u7b97\u901f\u5ea6\u5feb\uff0c\u4f46\u540c\u6837\u53ef\u80fd\u9020\u6210\u6536\u655b\u901f\u5ea6\u6162\u751a\u81f3\u4e0d\u6536\u655b \u901f\u5ea6\u5feb\uff0c\u968f\u673a\u6027\u6709\u5229\u4e8e\u8df3\u51fa\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u51c6\u786e\u5ea6\u4e0b\u964d\uff0c\u89e3\u7a7a\u95f4\u641c\u7d22\u6bd4\u8f83\u76f2\u76ee\uff0c\u4f46\u5927\u4f53\u4e0a\u662f\u6700\u4f18\u65b9\u5411 \u82e5\u6536\u655b\uff0closs \u5448\u73b0\u4e0a\u4e0b\u9707\u8361\u3001\u4f46\u603b\u4f53\u4e0a\u4e0b\u964d\u7684\u8d8b\u52bf Math Formula \ud83c\udfb6 $$ L(\\bm{w}) $$ E: $1 $ plus $1$ $=$ $2$ $\\displaystyle L() $ $\\displaystyle L(\\bm{w},b,\\bm{\\xi},\\bm{\\alpha},\\bm{\\mu})=\\frac{1}{2}||\\bm{w}||^2+C\\sum_{i=1}^n \\xi_i-\\sum_{i=1}^n \\alpha_i(y_i(\\bm{w^\\mathrm{T}}\\bm{x_i}+b)-1+\\xi_i)-\\sum_{i=1}^n\\mu_i\\xi_i \\\\ \\Leftrightarrow $ $\\displaystyle \\left(\\begin{array}{c} p_{1} \\\\ p_{2} \\\\ \\vdots \\\\ p_{R} \\end{array}\\right)\\left(\\begin{array}{cccc} a_{1} & a_{2} & \\cdots & a_{M} \\end{array}\\right)=\\left(\\begin{array}{cccc} p_{1} a_{1} & p_{1} a_{2} & \\cdots & p_{1} a_{M} \\\\ p_{2} a_{1} & p_{2} a_{2} & \\cdots & p_{2} a_{M} \\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ p_{R} a_{1} & p_{R} a_{2} & \\cdots & p_{R} a_{M} \\end{array}\\right) $ Permalink \ud83c\udfb6 \u2b50\ud83e\udd2f\ud83e\udd73\ud83e\uddd0\ud83d\ude08\ud83e\udd16\ud83d\udc7e\u2764\ufe0f\u200d\ud83d\udd25\ud83d\udcaf\ud83d\udca4\ud83c\udf3a\ud83c\udf38\ud83d\udcae\ud83c\udf3c\ud83c\udf51\ud83c\udf44\ud83c\udf10\ud83e\udded\ud83c\udf0d\u23f3\ud83c\udf1f\ud83e\ude90\ud83c\udf20\ud83c\udf0c\ud83c\udf86\ud83c\udf87\ud83c\udfc5\ud83c\udfbc\ud83c\udfb5\ud83c\udfb6\ud83d\udee1\u26a0\u23e9\ud83d\udd06\ud83c\udfc1\ud83d\udea9\ud83d\udd16\u2709\ud83d\udcd2\ud83d\udcd6\ud83d\udcd4\ud83d\udcd9\ud83d\udcd5\ud83d\udcd1\ud83d\uddc2\ud83d\udcc8\ud83d\udccc\ud83d\udcce\ud83d\udd12\ud83d\udd11\ud83d\udddd\ud83d\udde1\u2694\ud83d\udd2b\ud83d\udd2d\ud83d\udce1\ud83e\uddec\ud83e\ude7a\ud83d\udca0\ud83d\udd18 Fonts \ud83c\udfb6 en: cycn-eng:\u2003 If winter comes , can spring be far behind ? monaco:\u2003 If winter comes , can spring be far behind ? consolas:\u2003 If winter comes , can spring be far behind ? m:\u2003 If winter comes , can spring be far behind ? msf:\u2003 If winter comes , can spring be far behind ? Tables: Simple Style & Addition \ud83c\udfb6 C Type Min Value \u2003\u2003\u2003\u2003 Max Value \u2003\u2003\u2003\u2003 [signed] char -127 127 unsigned char 0 255 short -32767 32767 unsigned short 0 65535 int -32767 32767 unsigned 0 65535 long -2147483647 2147483647 unsigned long 0 4294967295 int32_t -2147483647 2147483647 uint32_t 0 4294967295 int64_t -9223372036854775808 9223372036854775807 uint64_t 0 18446744073709551615 C Type Min Value \u2003\u2003\u2003\u2003 Max Value \u2003\u2003\u2003\u2003 [signed] char -127 127 unsigned char 0 255 short -32767 32767 unsigned short 0 65535 int -32767 32767 unsigned 0 65535 long -2147483647 2147483647 unsigned long 0 4294967295 int32_t -2147483647 2147483647 uint32_t 0 4294967295 int64_t -9223372036854775808 9223372036854775807 uint64_t 0 18446744073709551615 Admonitions \ud83c\udfb6 \u4e00\u4e2a\u5173\u7cfb\u4e2d\u53ef\u80fd\u7531\u591a\u7ec4\u5019\u9009\u7801\uff0c\u56e0\u6b64\uff0c\u7528\u4e3b\u7801 (primary key) \u4ee3\u8868\u88ab\u6570\u636e\u5e93\u8bbe\u8ba1\u8005\u9009\u4e2d\u7684\u3001\u7528\u4ee5\u5728\u4e00\u4e2a\u5173\u7cfb\u4e2d\u533a\u5206\u4e0d\u540c\u5143\u7ec4\u7684\u5019\u9009\u7801\u3002\u4e3b\u7801\u7684\u9009\u62e9\u5e94\u5f53\u614e\u91cd\uff0c\u5e94\u9009\u62e9\u90a3\u4e9b\u503c\u4e0d\u4f1a\u6216\u6781\u5c11\u53d8\u5316\u7684\u90a3\u4e9b\u5c5e\u6027\uff0c\u4f8b\u5982\u4e00\u4e2a\u4eba\u7684\u5730\u5740\u5c31\u4e0d\u5e94\u88ab\u9009\u4e3a\u4e3b\u7801\u3002\u4e60\u60ef\u4e0a\uff0c\u628a\u4e00\u4e2a\u5173\u7cfb\u7684\u4e3b\u7801\u5c5e\u6027\u6392\u5217\u5728\u5176\u4ed6\u5c5e\u6027\u524d\u3002 hint \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 hint \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 caution \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 caution \u7684 de \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 caution NetID HostID \u4f5c\u4e3a\u6e90 IP \u4f5c\u4e3a\u76ee\u7684 IP \u7528\u9014 \u51680 \u51680 \u53ef\u4ee5 \u4e0d\u53ef\u4ee5 \u5728\u672c\u5c40\u57df\u7f51\u8303\u56f4\u5185\u8868\u793a\u672c\u673a\uff1b\u5728\u8def\u7531\u8868\u4e2d\u7528\u4e8e\u8868\u793a\u9ed8\u8ba4\u8def\u7531 \u51680 \u7279\u5b9a\u503c \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u7528\u4e8e\u8868\u793a\u672c\u5c40\u57df\u7f51\u5185\u67d0\u4e2a\u7279\u5b9a\u4e3b\u673a \u51681 \u51681 \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u672c\u5c40\u57df\u7f51\u5185\u5e7f\u64ad\u5730\u5740 \u7279\u5b9a\u503c \u51680 \u4e0d\u53ef\u4ee5 \u4e0d\u53ef\u4ee5 \u7f51\u7edc\u7684\u5730\u5740\uff0c\u8868\u793a\u4e00\u4e2a\u7f51\u7edc \u7279\u5b9a\u503c \u51681 \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u76f4\u63a5\u5e7f\u64ad\u5730\u5740\uff0c\u5bf9\u7279\u5b9a\u7f51\u7edc\uff08\u53e6\u5916\u4e00\u4e2a\u7f51\u7edc\uff09\u4e0a\u6240\u6709\u4e3b\u673a\u8fdb\u884c\u5e7f\u64ad 127 \u975e\u51680\u6216\u975e\u51681\u7684\u4efb\u4f55\u6570 \u53ef\u4ee5 \u53ef\u4ee5 \u73af\u56de\u5730\u5740\uff0c\u7528\u4e8e\u672c\u5730\u8f6f\u4ef6\u73af\u56de\u6d4b\u8bd5 Img \ud83c\udfb6 \u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd abcdefg \u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd ---------------------------- BORDER ------------------------------------ usage : < font class = \"i_[l|r|n]_[a...]_[b...]\" id = \"caption\" ></ font > Nested Title (2) \ud83c\udfb6 Nested Title (3) \ud83c\udfb6 Nested Title (4) \ud83c\udfb6 Nested Title (5) \ud83c\udfb6","title":"general"},{"location":"general/#paragraph","text":"\u4e00\u8bf4\u8d77\u7985\u667a\u5185\u4f9b\u7684\u9f3b\u5b50\uff0c\u6c60\u5c3e\u5730\u65b9\u662f\u6ca1\u4e00\u4e2a\u4e0d\u77e5\u9053\u7684\u3002\u957f\u6709\u4e94\u516d\u5bf8\uff0c\u4ece\u4e0a\u5507\u7684\u4e0a\u9762\u76f4\u62d6\u5230\u4e0b\u988f\u7684\u4e0b\u9762\u53bb\u3002\u5f62\u72b6\u662f\u4ece\u9876\u5230\u5e95\uff0c\u4e00\u6837\u7684\u7c97\u7ec6\u3002\u7b80\u6377\u8bf4\uff0c\u4fbf\u662f\u4e00\u6761\u7ec6\u957f\u7684\u9999\u80a0\u4f3c\u7684\u4e1c\u897f\uff0c\u5728\u8138\u4e2d\u592e\u62d6\u7740\u7f62\u4e86\u3002 \u4e94\u5341\u591a\u5c81\u7684\u5185\u4f9b\u662f\u4ece\u8fd8\u505a\u6c99\u5f25\u7684\u5f80\u6614\u4ee5\u6765\uff0c\u4e00\u76f4\u5230\u751f\u4e86\u5185\u9053\u573a\u4f9b\u5949\u7684\u73b0\u5728\u4e3a\u6b62\uff0c\u5fc3\u5e95\u91cc\u59cb\u7ec8\u82e6\u7740\u8fd9\u9f3b\u5b50\u3002\u8fd9\u4e5f\u4e0d\u5355\u56e0\u4e3a\u81ea\u5df1\u662f\u5e94\u8be5\u4e00\u5fc3\u6e34\u4ef0\u7740\u5c06\u6765\u7684\u51c0\u571f\u7684\u548c\u5c1a\uff0c\u4e8e\u9f3b\u5b50\u7684\u70e6\u607c\uff0c\u4e0d\u5f88\u76f8\u5b9c\uff1b\u5176\u5b9e\u5012\u5728\u4e0d\u613f\u610f\u6709\u4eba\u77e5\u9053\u4ed6\u4ecb\u610f\u4e8e\u9f3b\u5b50\u7684\u4e8b\u3002\u5185\u4f9b\u5728\u5e73\u65f6\u7684\u8c08\u8bdd\u91cc\uff0c\u4e5f\u6700\u6015\u8bf4\u51fa\u9f3b\u5b50\u8fd9\u4e00\u53e5\u8bdd\u6765\u3002 \u5185\u4f9b\u4e4b\u6240\u4ee5\u70e6\u817b\u90a3\u9f3b\u5b50\u7684\u7406\u7531\uff0c\u5927\u6982\u6709\u4e8c\uff0c\u2014\u2014\u5176\u4e00\uff0c\u56e0\u4e3a\u9f3b\u5b50\u4e4b\u957f\uff0c\u5728\u5b9e\u9645\u4e0a\u5f88\u4e0d\u4fbf\u3002\u7b2c\u4e00\u662f\u5403\u996d\u65f6\u5019\uff0c\u72ec\u81ea\u4e0d\u80fd\u5403\u3002\u5018\u82e5\u72ec\u81ea\u5403\u65f6\uff0c\u9f3b\u5b50\u4fbf\u8fbe\u5230\u7897\u91cc\u7684\u996d\u4e0a\u9762\u53bb\u4e86\u3002\u4e8e\u662f\u5185\u4f9b\u53eb\u4e00\u4e2a\u5f1f\u5b50\u5750\u5728\u6b63\u5bf9\u9762\uff0c\u5f53\u5403\u996d\u65f6\uff0c\u4f7f\u4ed6\u7528\u4e00\u6761\u5e7f\u4e00\u5bf8\u957f\u4e8c\u5c3a\u7684\u6728\u677f\uff0c\u6380\u8d77\u9f3b\u5b50\u6765\u3002\u4f46\u662f\u8fd9\u6837\u7684\u5403\u996d\u6cd5\uff0c\u5728\u80fd\u6380\u7684\u5f1f\u5b50\u548c\u6240\u6380\u7684\u5185\u4f9b\uff0c\u90fd\u4e0d\u662f\u5bb9\u6613\u7684\u4e8b\u3002\u6709\u4e00\u56de\uff0c\u66ff\u4ee3\u8fd9\u5f1f\u5b50\u4e2d\u7ae5\u5b50\u6253\u4e86\u4e00\u4e2a\u55b7\u568f\uff0c\u56e0\u800c\u624b\u4e00\u6296\uff0c\u90a3\u9f3b\u5b50\u4fbf\u843d\u5230\u7ca5\u91cc\u53bb\u4e86\u7684\u6545\u4e8b\uff0c\u90a3\u65f6\u662f\u8fde\u4eac\u90fd\u90fd\u4f20\u904d\u7684\u3002\u2014\u2014\u7136\u800c\u8fd9\u4e8b\uff0c\u5374\u8fd8\u4e0d\u662f\u5185\u4f9b\u4e4b\u6240\u4ee5\u4ee5\u9f3b\u5b50\u4e3a\u82e6\u7684\u91cd\u5927\u7684\u7406\u7531\uff0c\u5185\u4f9b\u4e4b\u6240\u4ee5\u4e3a\u82e6\u8005\uff0c\u5176\u5b9e\u5374\u5728\u4e4e\u56e0\u8fd9\u9f3b\u5b50\u800c\u4f24\u4e86\u81ea\u5c0a\u5fc3\u8fd9\u4e00\u70b9\u3002 \u6c60\u5c3e\u7684\u767e\u59d3\u4eec\uff0c\u66ff\u6709\u7740\u8fd9\u6837\u9f3b\u5b50\u7684\u5185\u4f9b\u8bbe\u60f3\uff0c\u8bf4\u5185\u4f9b\u5e78\u800c\u662f\u51fa\u5bb6\u4eba\uff1b\u56e0\u4e3a\u90fd\u4ee5\u4e3a\u8fd9\u6837\u7684\u9f3b\u5b50\uff0c\u662f\u6ca1\u6709\u5973\u4eba\u80af\u5ac1\u7684\u3002\u5176\u4e2d\u751a\u800c\u81f3\u4e8e\u8fd8\u6709\u8fd9\u6837\u7684\u6279\u8bc4\uff0c\u8bf4\u662f\u6b63\u56e0\u4e3a\u8fd9\u6837\u9f3b\u5b50\uff0c\u6240\u4ee5\u624d\u6765\u505a\u548c\u5c1a\u3002\u7136\u800c\u5185\u4f9b\u81ea\u5df1\uff0c\u5374\u5e76\u4e0d\u89c9\u5f97\u505a\u4e86\u548c\u5c1a\uff0c\u4fbf\u51cf\u4e86\u51e0\u5206\u9f3b\u5b50\u7684\u70e6\u607c\u53bb\u3002\u5185\u4f9b\u7684\u81ea\u5c0a\u5fc3\uff0c\u8f83\u4e4b\u4e3a\u5a36\u59bb\u8fd9\u7c7b\u7ed3\u679c\u7684\u4e8b\u5b9e\u6240\u5de6\u53f3\u7684\u4e1c\u897f\uff0c\u5fae\u5999\u5f97\u591a\u591a\u4e86\u3002\u56e0\u6b64\u5185\u4f9b\u5728\u79ef\u6781\u7684\u548c\u6d88\u6781\u7684\u4e24\u65b9\u9762\uff0c\u8981\u5c06\u8fd9\u81ea\u5c0a\u5fc3\u7684\u6bc1\u635f\u6062\u590d\u8fc7\u6765\u3002","title":"Paragraph"},{"location":"general/#list","text":"\u4e0a\u9762\u7684\u4f8b\u5b50\u5047\u8bbe\u6570\u636e\u96c6\u7684\u57fa\u6570\u4e3a 1\u3002\u5f53\u6570\u636e\u96c6\u5f88\u5927\u65f6: \u6279\u91cf\u68af\u5ea6\u4e0b\u964d (BGD):\u2003\u7406\u60f3\u7684\u68af\u5ea6\u4e0b\u964d\u65b9\u5f0f\uff0c\u5bf9\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u8f93\u5165\u8ba1\u7b97\u8bef\u5dee\uff0c\u5c06\u6240\u6709\u8bef\u5dee\u7d2f\u52a0\u53d6\u5e73\u5747\u4f5c\u4e3a\u6700\u7ec8\u7684\u4ee3\u4ef7\u51fd\u6570\uff0c\u5e76\u4ee5\u6b64\u66f4\u65b0\u53c2\u6570 \u5168\u6570\u636e\u96c6\u8ba1\u7b97\u4ee3\u4ef7\u51fd\u6570\uff0c\u66f4\u597d\u5730\u4ee3\u8868\u603b\u4f53\uff0c\u7b97\u51fa\u6781\u5c0f\u503c\u540e\uff0c\u4fdd\u8bc1\u68af\u5ea6\u4e3a 00 \u5bf9\u6bcf\u4e2a\u53c2\u6570\u6c42\u504f\u5bfc\u9700\u8981\u904d\u5386\u6570\u636e\u96c6\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u5f88\u6162 \u5bb9\u6613\u9677\u5165\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u968f\u673a\u68af\u5ea6\u4e0b\u964d (stochastic, SGD):\u2003\u6bcf\u8ba1\u7b97\u4e00\u4e2a\u6837\u672c\u7684\u524d\u5411\u4f20\u64ad\u540e\uff0c\u5c31\u8ba1\u7b97\u5b83\u7684\u4ee3\u4ef7\uff0c\u5e76\u4ee5\u4e4b\u4e3a\u76ee\u6807\u51fd\u6570\u66f4\u65b0\u53c2\u6570 \u901f\u5ea6\u5feb\uff0c\u968f\u673a\u6027\u6709\u5229\u4e8e\u8df3\u51fa\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u51c6\u786e\u5ea6\u4e0b\u964d\uff0c\u89e3\u7a7a\u95f4\u641c\u7d22\u6bd4\u8f83\u76f2\u76ee\uff0c\u4f46\u5927\u4f53\u4e0a\u662f\u6700\u4f18\u65b9\u5411 \u82e5\u6536\u655b\uff0closs \u5448\u73b0\u4e0a\u4e0b\u9707\u8361\u3001\u4f46\u603b\u4f53\u4e0a\u4e0b\u964d\u7684\u8d8b\u52bf \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d (Mini-BGD):\u2003SGD \u548c BGD \u7684\u6298\u4e2d\uff0c\u628a\u6570\u636e\u96c6\u968f\u673a\u5206\u6210\u82e5\u5e72 mini batch\uff0c\u6bcf\u6b21\u8fed\u4ee3\u4f7f\u7528 batch size \u4e2a\u6837\u672c\u8fdb\u884c\u66f4\u65b0 \u5408\u7406\u5730\u589e\u5927 batch \u53ef\u5145\u5206\u5229\u7528 GPU\uff0c\u63d0\u9ad8\u5185\u5b58\u5229\u7528\u7387\uff0c\u51cf\u5c0f loss \u7684\u9707\u8361\uff0c\u5c0f batch \u5f15\u5165\u968f\u673a\u6027\uff0c\u5c3d\u7ba1\u8ba1\u7b97\u901f\u5ea6\u5feb\uff0c\u4f46\u540c\u6837\u53ef\u80fd\u9020\u6210\u6536\u655b\u901f\u5ea6\u6162\u751a\u81f3\u4e0d\u6536\u655b \u5408\u7406\u5730\u589e\u5927 batch \u53ef\u5145\u5206\u5229\u7528 GPU\uff0c\u63d0\u9ad8\u5185\u5b58\u5229\u7528\u7387\uff0c\u51cf\u5c0f loss \u7684\u9707\u8361\uff0c\u5c0f batch \u5f15\u5165\u968f\u673a\u6027\uff0c\u5c3d\u7ba1\u8ba1\u7b97\u901f\u5ea6\u5feb\uff0c\u4f46\u540c\u6837\u53ef\u80fd\u9020\u6210\u6536\u655b\u901f\u5ea6\u6162\u751a\u81f3\u4e0d\u6536\u655b \u901f\u5ea6\u5feb\uff0c\u968f\u673a\u6027\u6709\u5229\u4e8e\u8df3\u51fa\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u51c6\u786e\u5ea6\u4e0b\u964d\uff0c\u89e3\u7a7a\u95f4\u641c\u7d22\u6bd4\u8f83\u76f2\u76ee\uff0c\u4f46\u5927\u4f53\u4e0a\u662f\u6700\u4f18\u65b9\u5411 \u82e5\u6536\u655b\uff0closs \u5448\u73b0\u4e0a\u4e0b\u9707\u8361\u3001\u4f46\u603b\u4f53\u4e0a\u4e0b\u964d\u7684\u8d8b\u52bf","title":"List"},{"location":"general/#math-formula","text":"$$ L(\\bm{w}) $$ E: $1 $ plus $1$ $=$ $2$ $\\displaystyle L() $ $\\displaystyle L(\\bm{w},b,\\bm{\\xi},\\bm{\\alpha},\\bm{\\mu})=\\frac{1}{2}||\\bm{w}||^2+C\\sum_{i=1}^n \\xi_i-\\sum_{i=1}^n \\alpha_i(y_i(\\bm{w^\\mathrm{T}}\\bm{x_i}+b)-1+\\xi_i)-\\sum_{i=1}^n\\mu_i\\xi_i \\\\ \\Leftrightarrow $ $\\displaystyle \\left(\\begin{array}{c} p_{1} \\\\ p_{2} \\\\ \\vdots \\\\ p_{R} \\end{array}\\right)\\left(\\begin{array}{cccc} a_{1} & a_{2} & \\cdots & a_{M} \\end{array}\\right)=\\left(\\begin{array}{cccc} p_{1} a_{1} & p_{1} a_{2} & \\cdots & p_{1} a_{M} \\\\ p_{2} a_{1} & p_{2} a_{2} & \\cdots & p_{2} a_{M} \\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ p_{R} a_{1} & p_{R} a_{2} & \\cdots & p_{R} a_{M} \\end{array}\\right) $","title":"Math Formula"},{"location":"general/#permalink","text":"\u2b50\ud83e\udd2f\ud83e\udd73\ud83e\uddd0\ud83d\ude08\ud83e\udd16\ud83d\udc7e\u2764\ufe0f\u200d\ud83d\udd25\ud83d\udcaf\ud83d\udca4\ud83c\udf3a\ud83c\udf38\ud83d\udcae\ud83c\udf3c\ud83c\udf51\ud83c\udf44\ud83c\udf10\ud83e\udded\ud83c\udf0d\u23f3\ud83c\udf1f\ud83e\ude90\ud83c\udf20\ud83c\udf0c\ud83c\udf86\ud83c\udf87\ud83c\udfc5\ud83c\udfbc\ud83c\udfb5\ud83c\udfb6\ud83d\udee1\u26a0\u23e9\ud83d\udd06\ud83c\udfc1\ud83d\udea9\ud83d\udd16\u2709\ud83d\udcd2\ud83d\udcd6\ud83d\udcd4\ud83d\udcd9\ud83d\udcd5\ud83d\udcd1\ud83d\uddc2\ud83d\udcc8\ud83d\udccc\ud83d\udcce\ud83d\udd12\ud83d\udd11\ud83d\udddd\ud83d\udde1\u2694\ud83d\udd2b\ud83d\udd2d\ud83d\udce1\ud83e\uddec\ud83e\ude7a\ud83d\udca0\ud83d\udd18","title":"Permalink"},{"location":"general/#fonts","text":"en: cycn-eng:\u2003 If winter comes , can spring be far behind ? monaco:\u2003 If winter comes , can spring be far behind ? consolas:\u2003 If winter comes , can spring be far behind ? m:\u2003 If winter comes , can spring be far behind ? msf:\u2003 If winter comes , can spring be far behind ?","title":"Fonts"},{"location":"general/#tables-simple-style-addition","text":"C Type Min Value \u2003\u2003\u2003\u2003 Max Value \u2003\u2003\u2003\u2003 [signed] char -127 127 unsigned char 0 255 short -32767 32767 unsigned short 0 65535 int -32767 32767 unsigned 0 65535 long -2147483647 2147483647 unsigned long 0 4294967295 int32_t -2147483647 2147483647 uint32_t 0 4294967295 int64_t -9223372036854775808 9223372036854775807 uint64_t 0 18446744073709551615 C Type Min Value \u2003\u2003\u2003\u2003 Max Value \u2003\u2003\u2003\u2003 [signed] char -127 127 unsigned char 0 255 short -32767 32767 unsigned short 0 65535 int -32767 32767 unsigned 0 65535 long -2147483647 2147483647 unsigned long 0 4294967295 int32_t -2147483647 2147483647 uint32_t 0 4294967295 int64_t -9223372036854775808 9223372036854775807 uint64_t 0 18446744073709551615","title":"Tables: Simple Style &amp; Addition"},{"location":"general/#admonitions","text":"\u4e00\u4e2a\u5173\u7cfb\u4e2d\u53ef\u80fd\u7531\u591a\u7ec4\u5019\u9009\u7801\uff0c\u56e0\u6b64\uff0c\u7528\u4e3b\u7801 (primary key) \u4ee3\u8868\u88ab\u6570\u636e\u5e93\u8bbe\u8ba1\u8005\u9009\u4e2d\u7684\u3001\u7528\u4ee5\u5728\u4e00\u4e2a\u5173\u7cfb\u4e2d\u533a\u5206\u4e0d\u540c\u5143\u7ec4\u7684\u5019\u9009\u7801\u3002\u4e3b\u7801\u7684\u9009\u62e9\u5e94\u5f53\u614e\u91cd\uff0c\u5e94\u9009\u62e9\u90a3\u4e9b\u503c\u4e0d\u4f1a\u6216\u6781\u5c11\u53d8\u5316\u7684\u90a3\u4e9b\u5c5e\u6027\uff0c\u4f8b\u5982\u4e00\u4e2a\u4eba\u7684\u5730\u5740\u5c31\u4e0d\u5e94\u88ab\u9009\u4e3a\u4e3b\u7801\u3002\u4e60\u60ef\u4e0a\uff0c\u628a\u4e00\u4e2a\u5173\u7cfb\u7684\u4e3b\u7801\u5c5e\u6027\u6392\u5217\u5728\u5176\u4ed6\u5c5e\u6027\u524d\u3002 hint \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 hint \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 caution \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 caution \u7684 de \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 caution NetID HostID \u4f5c\u4e3a\u6e90 IP \u4f5c\u4e3a\u76ee\u7684 IP \u7528\u9014 \u51680 \u51680 \u53ef\u4ee5 \u4e0d\u53ef\u4ee5 \u5728\u672c\u5c40\u57df\u7f51\u8303\u56f4\u5185\u8868\u793a\u672c\u673a\uff1b\u5728\u8def\u7531\u8868\u4e2d\u7528\u4e8e\u8868\u793a\u9ed8\u8ba4\u8def\u7531 \u51680 \u7279\u5b9a\u503c \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u7528\u4e8e\u8868\u793a\u672c\u5c40\u57df\u7f51\u5185\u67d0\u4e2a\u7279\u5b9a\u4e3b\u673a \u51681 \u51681 \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u672c\u5c40\u57df\u7f51\u5185\u5e7f\u64ad\u5730\u5740 \u7279\u5b9a\u503c \u51680 \u4e0d\u53ef\u4ee5 \u4e0d\u53ef\u4ee5 \u7f51\u7edc\u7684\u5730\u5740\uff0c\u8868\u793a\u4e00\u4e2a\u7f51\u7edc \u7279\u5b9a\u503c \u51681 \u4e0d\u53ef\u4ee5 \u53ef\u4ee5 \u76f4\u63a5\u5e7f\u64ad\u5730\u5740\uff0c\u5bf9\u7279\u5b9a\u7f51\u7edc\uff08\u53e6\u5916\u4e00\u4e2a\u7f51\u7edc\uff09\u4e0a\u6240\u6709\u4e3b\u673a\u8fdb\u884c\u5e7f\u64ad 127 \u975e\u51680\u6216\u975e\u51681\u7684\u4efb\u4f55\u6570 \u53ef\u4ee5 \u53ef\u4ee5 \u73af\u56de\u5730\u5740\uff0c\u7528\u4e8e\u672c\u5730\u8f6f\u4ef6\u73af\u56de\u6d4b\u8bd5","title":"Admonitions"},{"location":"general/#img","text":"\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd abcdefg \u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd ---------------------------- BORDER ------------------------------------ usage : < font class = \"i_[l|r|n]_[a...]_[b...]\" id = \"caption\" ></ font >","title":"Img"},{"location":"general/#nested-title-2","text":"","title":"Nested Title (2)"},{"location":"general/#nested-title-3","text":"","title":"Nested Title (3)"},{"location":"general/#nested-title-4","text":"","title":"Nested Title (4)"},{"location":"general/#nested-title-5","text":"","title":"Nested Title (5)"},{"location":"general/code/","text":"Inline Codes \ud83c\udfb6 \u51fd\u6570 Insert() \u63d2\u5165\u4e00\u4e2a\u7ed3\u70b9\uff0c\u901a\u8fc7 print(**kwargs) \u65b9\u6cd5\u8f93\u51fa\u53ef\u89c6\u5316\u4fe1\u606f Normal Code Blocks \ud83c\udfb6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } Tabbed Code Blocks \ud83c\udfb6 \u2003C\u2003 1 2 3 4 5 6 7 #include <stdio.h> /* main entry */ int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } \u2003 C++\u2003 ```c++ linenums=\"1\" include \ud83c\udfb6 / main entry / int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` \u2003Python\u2003 1 print ( 'Hello World!\") Codes In Admonition \ud83c\udfb6 Hello World ```C linenums=\"1\" / Hello, World ! / int main() { printf(\"Hello World!\"); } ``` RBTree Delete 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /* delete a node from rb-tree */ void Delete ( RBTree * tree , Node * z ) { Node * y = z ; Node * x ; Color yOrgColor = y -> color ; if ( z -> left == tree -> nil ) { x = z -> right ; Transplant ( tree , z , z -> right ); } else if ( z -> right == tree -> nil ) { x = z -> left ; Transplant ( tree , z , z -> left ); } else { y = Minimum ( tree , z -> right ); yOrgColor = y -> color ; x = y -> right ; if ( y -> parent == z ) { x -> parent = y ; // if z->right links to y directly and y->right links // to nil (i.e. x = nil), let nil->parent link to y } else { Transplant ( tree , y , y -> right ); y -> right = z -> right ; z -> right -> parent = y ; } Transplant ( tree , z , y ); y -> left = z -> left ; z -> left -> parent = y ; y -> color = z -> color ; // shift color } if ( yOrgColor == BLACK ) { DeleteFixup ( tree , x ); } } Tabbed Code In Admonition \ud83c\udfb6 Codes \u2003C\u2003 ```c linenums=\"1\" include \ud83c\udfb6 / main entry / int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"&emsp;C++&emsp;\" ```c++ linenums=\"1\" #include <iostream> /* main entry */ int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` Codes \u2003C\u2003 ```c linenums=\"1\" include \ud83c\udfb6 / main entry / int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"&emsp;C++&emsp;\" ```c++ linenums=\"1\" #include <iostream> /* main entry */ int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` Without Line Numbers \ud83c\udfb6 /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } Codes ``` C / randomly select an element / int RandomizedSelect(int A[], int index, int left, int right) { if (left == right) { return A[left]; } int i = RandomizedPartition(A, left, right); if (i + 1 == index) { return A[i]; } else if (i + 1 < index) { return RandomizedSelect(A, index, i + 1, right); } else { return RandomizedSelect(A, index, left, i - 1); } } ``` Codes ``` C / randomly select an element / int RandomizedSelect(int A[], int index, int left, int right) { if (left == right) { return A[left]; } int i = RandomizedPartition(A, left, right); if (i + 1 == index) { return A[i]; } else if (i + 1 < index) { return RandomizedSelect(A, index, i + 1, right); } else { return RandomizedSelect(A, index, left, i - 1); } } ```","title":"code"},{"location":"general/code/#inline-codes","text":"\u51fd\u6570 Insert() \u63d2\u5165\u4e00\u4e2a\u7ed3\u70b9\uff0c\u901a\u8fc7 print(**kwargs) \u65b9\u6cd5\u8f93\u51fa\u53ef\u89c6\u5316\u4fe1\u606f","title":"Inline Codes"},{"location":"general/code/#normal-code-blocks","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } }","title":"Normal Code Blocks"},{"location":"general/code/#tabbed-code-blocks","text":"C\u2003 1 2 3 4 5 6 7 #include <stdio.h> /* main entry */ int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } \u2003 C++\u2003 ```c++ linenums=\"1\"","title":"Tabbed Code Blocks"},{"location":"general/code/#include","text":"/ main entry / int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` \u2003Python\u2003 1 print ( 'Hello World!\")","title":"include "},{"location":"general/code/#codes-in-admonition","text":"Hello World ```C linenums=\"1\" / Hello, World ! / int main() { printf(\"Hello World!\"); } ``` RBTree Delete 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /* delete a node from rb-tree */ void Delete ( RBTree * tree , Node * z ) { Node * y = z ; Node * x ; Color yOrgColor = y -> color ; if ( z -> left == tree -> nil ) { x = z -> right ; Transplant ( tree , z , z -> right ); } else if ( z -> right == tree -> nil ) { x = z -> left ; Transplant ( tree , z , z -> left ); } else { y = Minimum ( tree , z -> right ); yOrgColor = y -> color ; x = y -> right ; if ( y -> parent == z ) { x -> parent = y ; // if z->right links to y directly and y->right links // to nil (i.e. x = nil), let nil->parent link to y } else { Transplant ( tree , y , y -> right ); y -> right = z -> right ; z -> right -> parent = y ; } Transplant ( tree , z , y ); y -> left = z -> left ; z -> left -> parent = y ; y -> color = z -> color ; // shift color } if ( yOrgColor == BLACK ) { DeleteFixup ( tree , x ); } }","title":"Codes In Admonition"},{"location":"general/code/#tabbed-code-in-admonition","text":"Codes \u2003C\u2003 ```c linenums=\"1\"","title":"Tabbed Code In Admonition"},{"location":"general/code/#include_1","text":"/ main entry / int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"&emsp;C++&emsp;\" ```c++ linenums=\"1\" #include <iostream> /* main entry */ int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` Codes \u2003C\u2003 ```c linenums=\"1\"","title":"include "},{"location":"general/code/#include_2","text":"/ main entry / int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"&emsp;C++&emsp;\" ```c++ linenums=\"1\" #include <iostream> /* main entry */ int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ```","title":"include "},{"location":"general/code/#without-line-numbers","text":"/* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } Codes ``` C / randomly select an element / int RandomizedSelect(int A[], int index, int left, int right) { if (left == right) { return A[left]; } int i = RandomizedPartition(A, left, right); if (i + 1 == index) { return A[i]; } else if (i + 1 < index) { return RandomizedSelect(A, index, i + 1, right); } else { return RandomizedSelect(A, index, left, i - 1); } } ``` Codes ``` C / randomly select an element / int RandomizedSelect(int A[], int index, int left, int right) { if (left == right) { return A[left]; } int i = RandomizedPartition(A, left, right); if (i + 1 == index) { return A[i]; } else if (i + 1 < index) { return RandomizedSelect(A, index, i + 1, right); } else { return RandomizedSelect(A, index, left, i - 1); } } ```","title":"Without Line Numbers"},{"location":"general/extracb/","text":"Extra Code Block \ud83c\udfb6 example \ud83c\udfb6 /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } \u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00 \u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00 ------------------------------- BORDER ------------------------------- /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } \u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00 \u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00 ------------------------------- BORDER ------------------------------- 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } \u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5 ------------------------------- BORDER ------------------------------- usage \ud83c\udfb6 < font class = \"symbol\" > </ font > symbol : c%<classname>[_(l|r)_(a%[n]&[n])_(b%[n]&[n])] a : margin top / bottom of the whole block including code block and text b : margin left / right of code block l/r : float of cb f : font-family of cb example : d\u554a\u554a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ;abcdefg _add_a_and_b: push %ebx mov %eax , [ %esp + 8 ] mov %ebx , [ %esp + 12 ] add %eax , %ebx pop %ebx ret _main : push 3 push 2 call _add_a_and_b add %esp , 8 \u5f97\u5fiven an integer array","title":"extra code blocks"},{"location":"general/extracb/#extra-code-block","text":"","title":"Extra Code Block"},{"location":"general/extracb/#example","text":"/* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } \u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00 \u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00 ------------------------------- BORDER ------------------------------- /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } \u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00 \u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00 ------------------------------- BORDER ------------------------------- 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } \u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5\u8bdd\u4e00\u6bb5 ------------------------------- BORDER -------------------------------","title":"example"},{"location":"general/extracb/#usage","text":"< font class = \"symbol\" > </ font > symbol : c%<classname>[_(l|r)_(a%[n]&[n])_(b%[n]&[n])] a : margin top / bottom of the whole block including code block and text b : margin left / right of code block l/r : float of cb f : font-family of cb example : d\u554a\u554a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ;abcdefg _add_a_and_b: push %ebx mov %eax , [ %esp + 8 ] mov %ebx , [ %esp + 12 ] add %eax , %ebx pop %ebx ret _main : push 3 push 2 call _add_a_and_b add %esp , 8 \u5f97\u5fiven an integer array","title":"usage"},{"location":"general/gadgets/book/","text":"general code extra code blocks test_nested_tab and more... Cover2","title":"book"},{"location":"general/gadgets/moon/","text":"","title":"moon"},{"location":"general/gadgets/terminal1/","text":"@import url('../../../css/gadgets/termynal.css'); /* body { padding: 0; margin: 0; background: #1a1e24; width: 100%; min-height: 100vh; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-align: center; -ms-flex-align: center; align-items: center; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } */ pip install spacy Successfully installed spacy python -m spacy download en Installed model 'en' python import spacy nlp = spacy.load('en') doc = nlp(u'Hello world') print([(w.text, w.pos_) for w in doc]) [('Hello', 'INTJ'), ('world', 'NOUN')]","title":"terminal1"},{"location":"general/gadgets/terminal2/","text":"@import url('../../../css/gadgets/termynal.css'); body { --color-bg: #ddd; --color-text: #1a1e24; --color-text-subtle: #D76D77; } npm uninstall react Are you sure you want to uninstall 'react'? y Uninstalled 'react' node Array(5).fill('\ud83e\udd84 ') ['\ud83e\udd84', '\ud83e\udd84', '\ud83e\udd84', '\ud83e\udd84', '\ud83e\udd84'] cd ~/repos git checkout branch master git commit -m \"Fix things\"","title":"terminal2"},{"location":"general/gadgets/terminal3/","text":"@import url('../../../css/gadgets/termynal.css'); body { --color-bg: #ddd; --color-text: #1a1e24; --color-text-subtle: #D76D77; } var termynal = new Termynal('#termynal', { typeDelay: 40, lineDelay: 700, lineData: [ { type: 'input', prompt: '\u25b2', value: 'npm uninstall react' }, { value: 'Are you sure you want to uninstall \\'react\\'?' }, { type: 'input', typeDelay: 1000, prompt: '(y/n)', value: 'y' }, { type: 'progress', progressChar: '\u00b7' }, { value: 'Uninstalled \\'react\\'' }, { type: 'input', prompt:'\u25b2', value: 'node' }, { type: 'input', prompt: '>', value: `Array(5).fill('\ud83e\udd84 ')` }, { value: `['\ud83e\udd84', '\ud83e\udd84', '\ud83e\udd84', '\ud83e\udd84', '\ud83e\udd84']` }, { type: 'input', prompt: '\u25b2', value: 'cd ~/repos' }, { type: 'input', prompt: '\u25b2 ~/repos', value: ' git checkout branch master' }, { type: 'input', prompt: '\u25b2 ~/repos (master)', value: 'git commit -m \\'Fix things\\'' }, ] });","title":"terminal3"},{"location":"general/gadgets/text/","text":"cross bar glitch \ud83c\udfb6 < head > < link rel = \"stylesheet\" href = \"../css/gadgets/glitchtext.css\" > </ head > < h1 class = \"cross-bar-glitch\" data-slice = \"20\" > Steins;Gate </ h1 > < script src = \"../js/gadgets/glitchtext.js\" ></ script > @import url('../../../css/gadgets/glitchtext.css'); Steins;Gate reveal \ud83c\udfb6 < head > < link rel = \"stylesheet\" href = \"../css/gadgets/revealtext.css\" > </ head > < div class = \"reveal\" > sword art online </ div > < script src = \"../js/gadgets/revealtext.js\" ></ script > @import url('../../../css/gadgets/revealtext.css'); .reveal::before, .reveal::after { background: #000000; } sword art online","title":"text"},{"location":"general/gadgets/text/#cross-bar-glitch","text":"< head > < link rel = \"stylesheet\" href = \"../css/gadgets/glitchtext.css\" > </ head > < h1 class = \"cross-bar-glitch\" data-slice = \"20\" > Steins;Gate </ h1 > < script src = \"../js/gadgets/glitchtext.js\" ></ script > @import url('../../../css/gadgets/glitchtext.css');","title":"cross bar glitch"},{"location":"general/gadgets/text/#reveal","text":"< head > < link rel = \"stylesheet\" href = \"../css/gadgets/revealtext.css\" > </ head > < div class = \"reveal\" > sword art online </ div > < script src = \"../js/gadgets/revealtext.js\" ></ script > @import url('../../../css/gadgets/revealtext.css'); .reveal::before, .reveal::after { background: #000000; } sword art online","title":"reveal"},{"location":"general/nested/1/","text":"2","title":1},{"location":"general/nested/outline/","text":"","title":"_outline_"},{"location":"test_tab/","text":"Paragraph \ud83c\udfb6 \u4e00\u8bf4\u8d77\u7985\u667a\u5185\u4f9b\u7684\u9f3b\u5b50\uff0c\u6c60\u5c3e\u5730\u65b9\u662f\u6ca1\u4e00\u4e2a\u4e0d\u77e5\u9053\u7684\u3002\u957f\u6709\u4e94\u516d\u5bf8\uff0c\u4ece\u4e0a\u5507\u7684\u4e0a\u9762\u76f4\u62d6\u5230\u4e0b\u988f\u7684\u4e0b\u9762\u53bb\u3002\u5f62\u72b6\u662f\u4ece\u9876\u5230\u5e95\uff0c\u4e00\u6837\u7684\u7c97\u7ec6\u3002\u7b80\u6377\u8bf4\uff0c\u4fbf\u662f\u4e00\u6761\u7ec6\u957f\u7684\u9999\u80a0\u4f3c\u7684\u4e1c\u897f\uff0c\u5728\u8138\u4e2d\u592e\u62d6\u7740\u7f62\u4e86\u3002 \u4e94\u5341\u591a\u5c81\u7684\u5185\u4f9b\u662f\u4ece\u8fd8\u505a\u6c99\u5f25\u7684\u5f80\u6614\u4ee5\u6765\uff0c\u4e00\u76f4\u5230\u751f\u4e86\u5185\u9053\u573a\u4f9b\u5949\u7684\u73b0\u5728\u4e3a\u6b62\uff0c\u5fc3\u5e95\u91cc\u59cb\u7ec8\u82e6\u7740\u8fd9\u9f3b\u5b50\u3002\u8fd9\u4e5f\u4e0d\u5355\u56e0\u4e3a\u81ea\u5df1\u662f\u5e94\u8be5\u4e00\u5fc3\u6e34\u4ef0\u7740\u5c06\u6765\u7684\u51c0\u571f\u7684\u548c\u5c1a\uff0c\u4e8e\u9f3b\u5b50\u7684\u70e6\u607c\uff0c\u4e0d\u5f88\u76f8\u5b9c\uff1b\u5176\u5b9e\u5012\u5728\u4e0d\u613f\u610f\u6709\u4eba\u77e5\u9053\u4ed6\u4ecb\u610f\u4e8e\u9f3b\u5b50\u7684\u4e8b\u3002\u5185\u4f9b\u5728\u5e73\u65f6\u7684\u8c08\u8bdd\u91cc\uff0c\u4e5f\u6700\u6015\u8bf4\u51fa\u9f3b\u5b50\u8fd9\u4e00\u53e5\u8bdd\u6765\u3002 \u5185\u4f9b\u4e4b\u6240\u4ee5\u70e6\u817b\u90a3\u9f3b\u5b50\u7684\u7406\u7531\uff0c\u5927\u6982\u6709\u4e8c\uff0c\u2014\u2014\u5176\u4e00\uff0c\u56e0\u4e3a\u9f3b\u5b50\u4e4b\u957f\uff0c\u5728\u5b9e\u9645\u4e0a\u5f88\u4e0d\u4fbf\u3002\u7b2c\u4e00\u662f\u5403\u996d\u65f6\u5019\uff0c\u72ec\u81ea\u4e0d\u80fd\u5403\u3002\u5018\u82e5\u72ec\u81ea\u5403\u65f6\uff0c\u9f3b\u5b50\u4fbf\u8fbe\u5230\u7897\u91cc\u7684\u996d\u4e0a\u9762\u53bb\u4e86\u3002\u4e8e\u662f\u5185\u4f9b\u53eb\u4e00\u4e2a\u5f1f\u5b50\u5750\u5728\u6b63\u5bf9\u9762\uff0c\u5f53\u5403\u996d\u65f6\uff0c\u4f7f\u4ed6\u7528\u4e00\u6761\u5e7f\u4e00\u5bf8\u957f\u4e8c\u5c3a\u7684\u6728\u677f\uff0c\u6380\u8d77\u9f3b\u5b50\u6765\u3002\u4f46\u662f\u8fd9\u6837\u7684\u5403\u996d\u6cd5\uff0c\u5728\u80fd\u6380\u7684\u5f1f\u5b50\u548c\u6240\u6380\u7684\u5185\u4f9b\uff0c\u90fd\u4e0d\u662f\u5bb9\u6613\u7684\u4e8b\u3002\u6709\u4e00\u56de\uff0c\u66ff\u4ee3\u8fd9\u5f1f\u5b50\u4e2d\u7ae5\u5b50\u6253\u4e86\u4e00\u4e2a\u55b7\u568f\uff0c\u56e0\u800c\u624b\u4e00\u6296\uff0c\u90a3\u9f3b\u5b50\u4fbf\u843d\u5230\u7ca5\u91cc\u53bb\u4e86\u7684\u6545\u4e8b\uff0c\u90a3\u65f6\u662f\u8fde\u4eac\u90fd\u90fd\u4f20\u904d\u7684\u3002\u2014\u2014\u7136\u800c\u8fd9\u4e8b\uff0c\u5374\u8fd8\u4e0d\u662f\u5185\u4f9b\u4e4b\u6240\u4ee5\u4ee5\u9f3b\u5b50\u4e3a\u82e6\u7684\u91cd\u5927\u7684\u7406\u7531\uff0c\u5185\u4f9b\u4e4b\u6240\u4ee5\u4e3a\u82e6\u8005\uff0c\u5176\u5b9e\u5374\u5728\u4e4e\u56e0\u8fd9\u9f3b\u5b50\u800c\u4f24\u4e86\u81ea\u5c0a\u5fc3\u8fd9\u4e00\u70b9\u3002 \u6c60\u5c3e\u7684\u767e\u59d3\u4eec\uff0c\u66ff\u6709\u7740\u8fd9\u6837\u9f3b\u5b50\u7684\u5185\u4f9b\u8bbe\u60f3\uff0c\u8bf4\u5185\u4f9b\u5e78\u800c\u662f\u51fa\u5bb6\u4eba\uff1b\u56e0\u4e3a\u90fd\u4ee5\u4e3a\u8fd9\u6837\u7684\u9f3b\u5b50\uff0c\u662f\u6ca1\u6709\u5973\u4eba\u80af\u5ac1\u7684\u3002\u5176\u4e2d\u751a\u800c\u81f3\u4e8e\u8fd8\u6709\u8fd9\u6837\u7684\u6279\u8bc4\uff0c\u8bf4\u662f\u6b63\u56e0\u4e3a\u8fd9\u6837\u9f3b\u5b50\uff0c\u6240\u4ee5\u624d\u6765\u505a\u548c\u5c1a\u3002\u7136\u800c\u5185\u4f9b\u81ea\u5df1\uff0c\u5374\u5e76\u4e0d\u89c9\u5f97\u505a\u4e86\u548c\u5c1a\uff0c\u4fbf\u51cf\u4e86\u51e0\u5206\u9f3b\u5b50\u7684\u70e6\u607c\u53bb\u3002\u5185\u4f9b\u7684\u81ea\u5c0a\u5fc3\uff0c\u8f83\u4e4b\u4e3a\u5a36\u59bb\u8fd9\u7c7b\u7ed3\u679c\u7684\u4e8b\u5b9e\u6240\u5de6\u53f3\u7684\u4e1c\u897f\uff0c\u5fae\u5999\u5f97\u591a\u591a\u4e86\u3002\u56e0\u6b64\u5185\u4f9b\u5728\u79ef\u6781\u7684\u548c\u6d88\u6781\u7684\u4e24\u65b9\u9762\uff0c\u8981\u5c06\u8fd9\u81ea\u5c0a\u5fc3\u7684\u6bc1\u635f\u6062\u590d\u8fc7\u6765\u3002 List \ud83c\udfb6 \u4e0a\u9762\u7684\u4f8b\u5b50\u5047\u8bbe\u6570\u636e\u96c6\u7684\u57fa\u6570\u4e3a 1\u3002\u5f53\u6570\u636e\u96c6\u5f88\u5927\u65f6: \u6279\u91cf\u68af\u5ea6\u4e0b\u964d (BGD):\u2003\u7406\u60f3\u7684\u68af\u5ea6\u4e0b\u964d\u65b9\u5f0f\uff0c\u5bf9\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u8f93\u5165\u8ba1\u7b97\u8bef\u5dee\uff0c\u5c06\u6240\u6709\u8bef\u5dee\u7d2f\u52a0\u53d6\u5e73\u5747\u4f5c\u4e3a\u6700\u7ec8\u7684\u4ee3\u4ef7\u51fd\u6570\uff0c\u5e76\u4ee5\u6b64\u66f4\u65b0\u53c2\u6570 \u5168\u6570\u636e\u96c6\u8ba1\u7b97\u4ee3\u4ef7\u51fd\u6570\uff0c\u66f4\u597d\u5730\u4ee3\u8868\u603b\u4f53\uff0c\u7b97\u51fa\u6781\u5c0f\u503c\u540e\uff0c\u4fdd\u8bc1\u68af\u5ea6\u4e3a 00 \u5bf9\u6bcf\u4e2a\u53c2\u6570\u6c42\u504f\u5bfc\u9700\u8981\u904d\u5386\u6570\u636e\u96c6\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u5f88\u6162 \u5bb9\u6613\u9677\u5165\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u968f\u673a\u68af\u5ea6\u4e0b\u964d (stochastic, SGD):\u2003\u6bcf\u8ba1\u7b97\u4e00\u4e2a\u6837\u672c\u7684\u524d\u5411\u4f20\u64ad\u540e\uff0c\u5c31\u8ba1\u7b97\u5b83\u7684\u4ee3\u4ef7\uff0c\u5e76\u4ee5\u4e4b\u4e3a\u76ee\u6807\u51fd\u6570\u66f4\u65b0\u53c2\u6570 \u901f\u5ea6\u5feb\uff0c\u968f\u673a\u6027\u6709\u5229\u4e8e\u8df3\u51fa\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u51c6\u786e\u5ea6\u4e0b\u964d\uff0c\u89e3\u7a7a\u95f4\u641c\u7d22\u6bd4\u8f83\u76f2\u76ee\uff0c\u4f46\u5927\u4f53\u4e0a\u662f\u6700\u4f18\u65b9\u5411 \u82e5\u6536\u655b\uff0closs \u5448\u73b0\u4e0a\u4e0b\u9707\u8361\u3001\u4f46\u603b\u4f53\u4e0a\u4e0b\u964d\u7684\u8d8b\u52bf \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d (Mini-BGD):\u2003SGD \u548c BGD \u7684\u6298\u4e2d\uff0c\u628a\u6570\u636e\u96c6\u968f\u673a\u5206\u6210\u82e5\u5e72 mini batch\uff0c\u6bcf\u6b21\u8fed\u4ee3\u4f7f\u7528 batch size \u4e2a\u6837\u672c\u8fdb\u884c\u66f4\u65b0 \u5408\u7406\u5730\u589e\u5927 batch \u53ef\u5145\u5206\u5229\u7528 GPU\uff0c\u63d0\u9ad8\u5185\u5b58\u5229\u7528\u7387\uff0c\u51cf\u5c0f loss \u7684\u9707\u8361\uff0c\u5c0f batch \u5f15\u5165\u968f\u673a\u6027\uff0c\u5c3d\u7ba1\u8ba1\u7b97\u901f\u5ea6\u5feb\uff0c\u4f46\u540c\u6837\u53ef\u80fd\u9020\u6210\u6536\u655b\u901f\u5ea6\u6162\u751a\u81f3\u4e0d\u6536\u655b \u5408\u7406\u5730\u589e\u5927 batch \u53ef\u5145\u5206\u5229\u7528 GPU\uff0c\u63d0\u9ad8\u5185\u5b58\u5229\u7528\u7387\uff0c\u51cf\u5c0f loss \u7684\u9707\u8361\uff0c\u5c0f batch \u5f15\u5165\u968f\u673a\u6027\uff0c\u5c3d\u7ba1\u8ba1\u7b97\u901f\u5ea6\u5feb\uff0c\u4f46\u540c\u6837\u53ef\u80fd\u9020\u6210\u6536\u655b\u901f\u5ea6\u6162\u751a\u81f3\u4e0d\u6536\u655b \u901f\u5ea6\u5feb\uff0c\u968f\u673a\u6027\u6709\u5229\u4e8e\u8df3\u51fa\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u51c6\u786e\u5ea6\u4e0b\u964d\uff0c\u89e3\u7a7a\u95f4\u641c\u7d22\u6bd4\u8f83\u76f2\u76ee\uff0c\u4f46\u5927\u4f53\u4e0a\u662f\u6700\u4f18\u65b9\u5411 \u82e5\u6536\u655b\uff0closs \u5448\u73b0\u4e0a\u4e0b\u9707\u8361\u3001\u4f46\u603b\u4f53\u4e0a\u4e0b\u964d\u7684\u8d8b\u52bf Math Formula \ud83c\udfb6 $$ L(\\bm{w}) $$ E: $1 $ plus $1$ $=$ $2$ $\\displaystyle L() $ $\\displaystyle L(\\bm{w},b,\\bm{\\xi},\\bm{\\alpha},\\bm{\\mu})=\\frac{1}{2}||\\bm{w}||^2+C\\sum_{i=1}^n \\xi_i-\\sum_{i=1}^n \\alpha_i(y_i(\\bm{w^\\mathrm{T}}\\bm{x_i}+b)-1+\\xi_i)-\\sum_{i=1}^n\\mu_i\\xi_i \\\\ \\Leftrightarrow $ $\\displaystyle \\left(\\begin{array}{c} p_{1} \\\\ p_{2} \\\\ \\vdots \\\\ p_{R} \\end{array}\\right)\\left(\\begin{array}{cccc} a_{1} & a_{2} & \\cdots & a_{M} \\end{array}\\right)=\\left(\\begin{array}{cccc} p_{1} a_{1} & p_{1} a_{2} & \\cdots & p_{1} a_{M} \\\\ p_{2} a_{1} & p_{2} a_{2} & \\cdots & p_{2} a_{M} \\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ p_{R} a_{1} & p_{R} a_{2} & \\cdots & p_{R} a_{M} \\end{array}\\right) $ Permalink \ud83c\udfb6 \u2b50\ud83e\udd2f\ud83e\udd73\ud83e\uddd0\ud83d\ude08\ud83e\udd16\ud83d\udc7e\u2764\ufe0f\u200d\ud83d\udd25\ud83d\udcaf\ud83d\udca4\ud83c\udf3a\ud83c\udf38\ud83d\udcae\ud83c\udf3c\ud83c\udf51\ud83c\udf44\ud83c\udf10\ud83e\udded\ud83c\udf0d\u23f3\ud83c\udf1f\ud83e\ude90\ud83c\udf20\ud83c\udf0c\ud83c\udf86\ud83c\udf87\ud83c\udfc5\ud83c\udfbc\ud83c\udfb5\ud83c\udfb6\ud83d\udee1\u26a0\u23e9\ud83d\udd06\ud83c\udfc1\ud83d\udea9\ud83d\udd16\u2709\ud83d\udcd2\ud83d\udcd6\ud83d\udcd4\ud83d\udcd9\ud83d\udcd5\ud83d\udcd1\ud83d\uddc2\ud83d\udcc8\ud83d\udccc\ud83d\udcce\ud83d\udd12\ud83d\udd11\ud83d\udddd\ud83d\udde1\u2694\ud83d\udd2b\ud83d\udd2d\ud83d\udce1\ud83e\uddec\ud83e\ude7a\ud83d\udca0\ud83d\udd18 Fonts \ud83c\udfb6 en: cycn-eng:\u2003 If winter comes , can spring be far behind ? monaco:\u2003 If winter comes , can spring be far behind ? consolas:\u2003 If winter comes , can spring be far behind ? m:\u2003 If winter comes , can spring be far behind ? msf:\u2003 If winter comes , can spring be far behind ? Table: Simple Style \ud83c\udfb6 C Type Min Value \u2003\u2003\u2003\u2003 Max Value \u2003\u2003\u2003\u2003 [signed] char -127 127 unsigned char 0 255 short -32767 32767 unsigned short 0 65535 int -32767 32767 unsigned 0 65535 long -2147483647 2147483647 unsigned long 0 4294967295 int32_t -2147483647 2147483647 uint32_t 0 4294967295 int64_t -9223372036854775808 9223372036854775807 uint64_t 0 18446744073709551615 Admonitions \ud83c\udfb6 \u4e00\u4e2a\u5173\u7cfb\u4e2d\u53ef\u80fd\u7531\u591a\u7ec4\u5019\u9009\u7801\uff0c\u56e0\u6b64\uff0c\u7528\u4e3b\u7801 (primary key) \u4ee3\u8868\u88ab\u6570\u636e\u5e93\u8bbe\u8ba1\u8005\u9009\u4e2d\u7684\u3001\u7528\u4ee5\u5728\u4e00\u4e2a\u5173\u7cfb\u4e2d\u533a\u5206\u4e0d\u540c\u5143\u7ec4\u7684\u5019\u9009\u7801\u3002\u4e3b\u7801\u7684\u9009\u62e9\u5e94\u5f53\u614e\u91cd\uff0c\u5e94\u9009\u62e9\u90a3\u4e9b\u503c\u4e0d\u4f1a\u6216\u6781\u5c11\u53d8\u5316\u7684\u90a3\u4e9b\u5c5e\u6027\uff0c\u4f8b\u5982\u4e00\u4e2a\u4eba\u7684\u5730\u5740\u5c31\u4e0d\u5e94\u88ab\u9009\u4e3a\u4e3b\u7801\u3002\u4e60\u60ef\u4e0a\uff0c\u628a\u4e00\u4e2a\u5173\u7cfb\u7684\u4e3b\u7801\u5c5e\u6027\u6392\u5217\u5728\u5176\u4ed6\u5c5e\u6027\u524d\u3002 hint \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 hint \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 caution \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 caution \u7684 de \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 Nested Title (2) \ud83c\udfb6 Nested Title (3) \ud83c\udfb6 Nested Title (4) \ud83c\udfb6 Nested Title (5) \ud83c\udfb6","title":"general"},{"location":"test_tab/#paragraph","text":"\u4e00\u8bf4\u8d77\u7985\u667a\u5185\u4f9b\u7684\u9f3b\u5b50\uff0c\u6c60\u5c3e\u5730\u65b9\u662f\u6ca1\u4e00\u4e2a\u4e0d\u77e5\u9053\u7684\u3002\u957f\u6709\u4e94\u516d\u5bf8\uff0c\u4ece\u4e0a\u5507\u7684\u4e0a\u9762\u76f4\u62d6\u5230\u4e0b\u988f\u7684\u4e0b\u9762\u53bb\u3002\u5f62\u72b6\u662f\u4ece\u9876\u5230\u5e95\uff0c\u4e00\u6837\u7684\u7c97\u7ec6\u3002\u7b80\u6377\u8bf4\uff0c\u4fbf\u662f\u4e00\u6761\u7ec6\u957f\u7684\u9999\u80a0\u4f3c\u7684\u4e1c\u897f\uff0c\u5728\u8138\u4e2d\u592e\u62d6\u7740\u7f62\u4e86\u3002 \u4e94\u5341\u591a\u5c81\u7684\u5185\u4f9b\u662f\u4ece\u8fd8\u505a\u6c99\u5f25\u7684\u5f80\u6614\u4ee5\u6765\uff0c\u4e00\u76f4\u5230\u751f\u4e86\u5185\u9053\u573a\u4f9b\u5949\u7684\u73b0\u5728\u4e3a\u6b62\uff0c\u5fc3\u5e95\u91cc\u59cb\u7ec8\u82e6\u7740\u8fd9\u9f3b\u5b50\u3002\u8fd9\u4e5f\u4e0d\u5355\u56e0\u4e3a\u81ea\u5df1\u662f\u5e94\u8be5\u4e00\u5fc3\u6e34\u4ef0\u7740\u5c06\u6765\u7684\u51c0\u571f\u7684\u548c\u5c1a\uff0c\u4e8e\u9f3b\u5b50\u7684\u70e6\u607c\uff0c\u4e0d\u5f88\u76f8\u5b9c\uff1b\u5176\u5b9e\u5012\u5728\u4e0d\u613f\u610f\u6709\u4eba\u77e5\u9053\u4ed6\u4ecb\u610f\u4e8e\u9f3b\u5b50\u7684\u4e8b\u3002\u5185\u4f9b\u5728\u5e73\u65f6\u7684\u8c08\u8bdd\u91cc\uff0c\u4e5f\u6700\u6015\u8bf4\u51fa\u9f3b\u5b50\u8fd9\u4e00\u53e5\u8bdd\u6765\u3002 \u5185\u4f9b\u4e4b\u6240\u4ee5\u70e6\u817b\u90a3\u9f3b\u5b50\u7684\u7406\u7531\uff0c\u5927\u6982\u6709\u4e8c\uff0c\u2014\u2014\u5176\u4e00\uff0c\u56e0\u4e3a\u9f3b\u5b50\u4e4b\u957f\uff0c\u5728\u5b9e\u9645\u4e0a\u5f88\u4e0d\u4fbf\u3002\u7b2c\u4e00\u662f\u5403\u996d\u65f6\u5019\uff0c\u72ec\u81ea\u4e0d\u80fd\u5403\u3002\u5018\u82e5\u72ec\u81ea\u5403\u65f6\uff0c\u9f3b\u5b50\u4fbf\u8fbe\u5230\u7897\u91cc\u7684\u996d\u4e0a\u9762\u53bb\u4e86\u3002\u4e8e\u662f\u5185\u4f9b\u53eb\u4e00\u4e2a\u5f1f\u5b50\u5750\u5728\u6b63\u5bf9\u9762\uff0c\u5f53\u5403\u996d\u65f6\uff0c\u4f7f\u4ed6\u7528\u4e00\u6761\u5e7f\u4e00\u5bf8\u957f\u4e8c\u5c3a\u7684\u6728\u677f\uff0c\u6380\u8d77\u9f3b\u5b50\u6765\u3002\u4f46\u662f\u8fd9\u6837\u7684\u5403\u996d\u6cd5\uff0c\u5728\u80fd\u6380\u7684\u5f1f\u5b50\u548c\u6240\u6380\u7684\u5185\u4f9b\uff0c\u90fd\u4e0d\u662f\u5bb9\u6613\u7684\u4e8b\u3002\u6709\u4e00\u56de\uff0c\u66ff\u4ee3\u8fd9\u5f1f\u5b50\u4e2d\u7ae5\u5b50\u6253\u4e86\u4e00\u4e2a\u55b7\u568f\uff0c\u56e0\u800c\u624b\u4e00\u6296\uff0c\u90a3\u9f3b\u5b50\u4fbf\u843d\u5230\u7ca5\u91cc\u53bb\u4e86\u7684\u6545\u4e8b\uff0c\u90a3\u65f6\u662f\u8fde\u4eac\u90fd\u90fd\u4f20\u904d\u7684\u3002\u2014\u2014\u7136\u800c\u8fd9\u4e8b\uff0c\u5374\u8fd8\u4e0d\u662f\u5185\u4f9b\u4e4b\u6240\u4ee5\u4ee5\u9f3b\u5b50\u4e3a\u82e6\u7684\u91cd\u5927\u7684\u7406\u7531\uff0c\u5185\u4f9b\u4e4b\u6240\u4ee5\u4e3a\u82e6\u8005\uff0c\u5176\u5b9e\u5374\u5728\u4e4e\u56e0\u8fd9\u9f3b\u5b50\u800c\u4f24\u4e86\u81ea\u5c0a\u5fc3\u8fd9\u4e00\u70b9\u3002 \u6c60\u5c3e\u7684\u767e\u59d3\u4eec\uff0c\u66ff\u6709\u7740\u8fd9\u6837\u9f3b\u5b50\u7684\u5185\u4f9b\u8bbe\u60f3\uff0c\u8bf4\u5185\u4f9b\u5e78\u800c\u662f\u51fa\u5bb6\u4eba\uff1b\u56e0\u4e3a\u90fd\u4ee5\u4e3a\u8fd9\u6837\u7684\u9f3b\u5b50\uff0c\u662f\u6ca1\u6709\u5973\u4eba\u80af\u5ac1\u7684\u3002\u5176\u4e2d\u751a\u800c\u81f3\u4e8e\u8fd8\u6709\u8fd9\u6837\u7684\u6279\u8bc4\uff0c\u8bf4\u662f\u6b63\u56e0\u4e3a\u8fd9\u6837\u9f3b\u5b50\uff0c\u6240\u4ee5\u624d\u6765\u505a\u548c\u5c1a\u3002\u7136\u800c\u5185\u4f9b\u81ea\u5df1\uff0c\u5374\u5e76\u4e0d\u89c9\u5f97\u505a\u4e86\u548c\u5c1a\uff0c\u4fbf\u51cf\u4e86\u51e0\u5206\u9f3b\u5b50\u7684\u70e6\u607c\u53bb\u3002\u5185\u4f9b\u7684\u81ea\u5c0a\u5fc3\uff0c\u8f83\u4e4b\u4e3a\u5a36\u59bb\u8fd9\u7c7b\u7ed3\u679c\u7684\u4e8b\u5b9e\u6240\u5de6\u53f3\u7684\u4e1c\u897f\uff0c\u5fae\u5999\u5f97\u591a\u591a\u4e86\u3002\u56e0\u6b64\u5185\u4f9b\u5728\u79ef\u6781\u7684\u548c\u6d88\u6781\u7684\u4e24\u65b9\u9762\uff0c\u8981\u5c06\u8fd9\u81ea\u5c0a\u5fc3\u7684\u6bc1\u635f\u6062\u590d\u8fc7\u6765\u3002","title":"Paragraph"},{"location":"test_tab/#list","text":"\u4e0a\u9762\u7684\u4f8b\u5b50\u5047\u8bbe\u6570\u636e\u96c6\u7684\u57fa\u6570\u4e3a 1\u3002\u5f53\u6570\u636e\u96c6\u5f88\u5927\u65f6: \u6279\u91cf\u68af\u5ea6\u4e0b\u964d (BGD):\u2003\u7406\u60f3\u7684\u68af\u5ea6\u4e0b\u964d\u65b9\u5f0f\uff0c\u5bf9\u6570\u636e\u96c6\u4e2d\u6bcf\u4e2a\u8f93\u5165\u8ba1\u7b97\u8bef\u5dee\uff0c\u5c06\u6240\u6709\u8bef\u5dee\u7d2f\u52a0\u53d6\u5e73\u5747\u4f5c\u4e3a\u6700\u7ec8\u7684\u4ee3\u4ef7\u51fd\u6570\uff0c\u5e76\u4ee5\u6b64\u66f4\u65b0\u53c2\u6570 \u5168\u6570\u636e\u96c6\u8ba1\u7b97\u4ee3\u4ef7\u51fd\u6570\uff0c\u66f4\u597d\u5730\u4ee3\u8868\u603b\u4f53\uff0c\u7b97\u51fa\u6781\u5c0f\u503c\u540e\uff0c\u4fdd\u8bc1\u68af\u5ea6\u4e3a 00 \u5bf9\u6bcf\u4e2a\u53c2\u6570\u6c42\u504f\u5bfc\u9700\u8981\u904d\u5386\u6570\u636e\u96c6\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u5f88\u6162 \u5bb9\u6613\u9677\u5165\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u968f\u673a\u68af\u5ea6\u4e0b\u964d (stochastic, SGD):\u2003\u6bcf\u8ba1\u7b97\u4e00\u4e2a\u6837\u672c\u7684\u524d\u5411\u4f20\u64ad\u540e\uff0c\u5c31\u8ba1\u7b97\u5b83\u7684\u4ee3\u4ef7\uff0c\u5e76\u4ee5\u4e4b\u4e3a\u76ee\u6807\u51fd\u6570\u66f4\u65b0\u53c2\u6570 \u901f\u5ea6\u5feb\uff0c\u968f\u673a\u6027\u6709\u5229\u4e8e\u8df3\u51fa\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u51c6\u786e\u5ea6\u4e0b\u964d\uff0c\u89e3\u7a7a\u95f4\u641c\u7d22\u6bd4\u8f83\u76f2\u76ee\uff0c\u4f46\u5927\u4f53\u4e0a\u662f\u6700\u4f18\u65b9\u5411 \u82e5\u6536\u655b\uff0closs \u5448\u73b0\u4e0a\u4e0b\u9707\u8361\u3001\u4f46\u603b\u4f53\u4e0a\u4e0b\u964d\u7684\u8d8b\u52bf \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d (Mini-BGD):\u2003SGD \u548c BGD \u7684\u6298\u4e2d\uff0c\u628a\u6570\u636e\u96c6\u968f\u673a\u5206\u6210\u82e5\u5e72 mini batch\uff0c\u6bcf\u6b21\u8fed\u4ee3\u4f7f\u7528 batch size \u4e2a\u6837\u672c\u8fdb\u884c\u66f4\u65b0 \u5408\u7406\u5730\u589e\u5927 batch \u53ef\u5145\u5206\u5229\u7528 GPU\uff0c\u63d0\u9ad8\u5185\u5b58\u5229\u7528\u7387\uff0c\u51cf\u5c0f loss \u7684\u9707\u8361\uff0c\u5c0f batch \u5f15\u5165\u968f\u673a\u6027\uff0c\u5c3d\u7ba1\u8ba1\u7b97\u901f\u5ea6\u5feb\uff0c\u4f46\u540c\u6837\u53ef\u80fd\u9020\u6210\u6536\u655b\u901f\u5ea6\u6162\u751a\u81f3\u4e0d\u6536\u655b \u5408\u7406\u5730\u589e\u5927 batch \u53ef\u5145\u5206\u5229\u7528 GPU\uff0c\u63d0\u9ad8\u5185\u5b58\u5229\u7528\u7387\uff0c\u51cf\u5c0f loss \u7684\u9707\u8361\uff0c\u5c0f batch \u5f15\u5165\u968f\u673a\u6027\uff0c\u5c3d\u7ba1\u8ba1\u7b97\u901f\u5ea6\u5feb\uff0c\u4f46\u540c\u6837\u53ef\u80fd\u9020\u6210\u6536\u655b\u901f\u5ea6\u6162\u751a\u81f3\u4e0d\u6536\u655b \u901f\u5ea6\u5feb\uff0c\u968f\u673a\u6027\u6709\u5229\u4e8e\u8df3\u51fa\u5c40\u90e8\u6781\u5c0f\u503c\u70b9 \u51c6\u786e\u5ea6\u4e0b\u964d\uff0c\u89e3\u7a7a\u95f4\u641c\u7d22\u6bd4\u8f83\u76f2\u76ee\uff0c\u4f46\u5927\u4f53\u4e0a\u662f\u6700\u4f18\u65b9\u5411 \u82e5\u6536\u655b\uff0closs \u5448\u73b0\u4e0a\u4e0b\u9707\u8361\u3001\u4f46\u603b\u4f53\u4e0a\u4e0b\u964d\u7684\u8d8b\u52bf","title":"List"},{"location":"test_tab/#math-formula","text":"$$ L(\\bm{w}) $$ E: $1 $ plus $1$ $=$ $2$ $\\displaystyle L() $ $\\displaystyle L(\\bm{w},b,\\bm{\\xi},\\bm{\\alpha},\\bm{\\mu})=\\frac{1}{2}||\\bm{w}||^2+C\\sum_{i=1}^n \\xi_i-\\sum_{i=1}^n \\alpha_i(y_i(\\bm{w^\\mathrm{T}}\\bm{x_i}+b)-1+\\xi_i)-\\sum_{i=1}^n\\mu_i\\xi_i \\\\ \\Leftrightarrow $ $\\displaystyle \\left(\\begin{array}{c} p_{1} \\\\ p_{2} \\\\ \\vdots \\\\ p_{R} \\end{array}\\right)\\left(\\begin{array}{cccc} a_{1} & a_{2} & \\cdots & a_{M} \\end{array}\\right)=\\left(\\begin{array}{cccc} p_{1} a_{1} & p_{1} a_{2} & \\cdots & p_{1} a_{M} \\\\ p_{2} a_{1} & p_{2} a_{2} & \\cdots & p_{2} a_{M} \\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ p_{R} a_{1} & p_{R} a_{2} & \\cdots & p_{R} a_{M} \\end{array}\\right) $","title":"Math Formula"},{"location":"test_tab/#permalink","text":"\u2b50\ud83e\udd2f\ud83e\udd73\ud83e\uddd0\ud83d\ude08\ud83e\udd16\ud83d\udc7e\u2764\ufe0f\u200d\ud83d\udd25\ud83d\udcaf\ud83d\udca4\ud83c\udf3a\ud83c\udf38\ud83d\udcae\ud83c\udf3c\ud83c\udf51\ud83c\udf44\ud83c\udf10\ud83e\udded\ud83c\udf0d\u23f3\ud83c\udf1f\ud83e\ude90\ud83c\udf20\ud83c\udf0c\ud83c\udf86\ud83c\udf87\ud83c\udfc5\ud83c\udfbc\ud83c\udfb5\ud83c\udfb6\ud83d\udee1\u26a0\u23e9\ud83d\udd06\ud83c\udfc1\ud83d\udea9\ud83d\udd16\u2709\ud83d\udcd2\ud83d\udcd6\ud83d\udcd4\ud83d\udcd9\ud83d\udcd5\ud83d\udcd1\ud83d\uddc2\ud83d\udcc8\ud83d\udccc\ud83d\udcce\ud83d\udd12\ud83d\udd11\ud83d\udddd\ud83d\udde1\u2694\ud83d\udd2b\ud83d\udd2d\ud83d\udce1\ud83e\uddec\ud83e\ude7a\ud83d\udca0\ud83d\udd18","title":"Permalink"},{"location":"test_tab/#fonts","text":"en: cycn-eng:\u2003 If winter comes , can spring be far behind ? monaco:\u2003 If winter comes , can spring be far behind ? consolas:\u2003 If winter comes , can spring be far behind ? m:\u2003 If winter comes , can spring be far behind ? msf:\u2003 If winter comes , can spring be far behind ?","title":"Fonts"},{"location":"test_tab/#table-simple-style","text":"C Type Min Value \u2003\u2003\u2003\u2003 Max Value \u2003\u2003\u2003\u2003 [signed] char -127 127 unsigned char 0 255 short -32767 32767 unsigned short 0 65535 int -32767 32767 unsigned 0 65535 long -2147483647 2147483647 unsigned long 0 4294967295 int32_t -2147483647 2147483647 uint32_t 0 4294967295 int64_t -9223372036854775808 9223372036854775807 uint64_t 0 18446744073709551615","title":"Table: Simple Style"},{"location":"test_tab/#admonitions","text":"\u4e00\u4e2a\u5173\u7cfb\u4e2d\u53ef\u80fd\u7531\u591a\u7ec4\u5019\u9009\u7801\uff0c\u56e0\u6b64\uff0c\u7528\u4e3b\u7801 (primary key) \u4ee3\u8868\u88ab\u6570\u636e\u5e93\u8bbe\u8ba1\u8005\u9009\u4e2d\u7684\u3001\u7528\u4ee5\u5728\u4e00\u4e2a\u5173\u7cfb\u4e2d\u533a\u5206\u4e0d\u540c\u5143\u7ec4\u7684\u5019\u9009\u7801\u3002\u4e3b\u7801\u7684\u9009\u62e9\u5e94\u5f53\u614e\u91cd\uff0c\u5e94\u9009\u62e9\u90a3\u4e9b\u503c\u4e0d\u4f1a\u6216\u6781\u5c11\u53d8\u5316\u7684\u90a3\u4e9b\u5c5e\u6027\uff0c\u4f8b\u5982\u4e00\u4e2a\u4eba\u7684\u5730\u5740\u5c31\u4e0d\u5e94\u88ab\u9009\u4e3a\u4e3b\u7801\u3002\u4e60\u60ef\u4e0a\uff0c\u628a\u4e00\u4e2a\u5173\u7cfb\u7684\u4e3b\u7801\u5c5e\u6027\u6392\u5217\u5728\u5176\u4ed6\u5c5e\u6027\u524d\u3002 hint \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 hint \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 caution \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002 caution \u7684 de \u70b9\u5bf9\u70b9\u94fe\u8def (point-to-point link) \u7531\u94fe\u8def\u53ca\u5176\u4e24\u7aef\u5355\u4e00\u7684\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7ec4\u6210\u3002\u5f88\u591a\u94fe\u8def\u5c42\u534f\u8bae\u5982 PPP\u3001HDLC \u57fa\u4e8e\u6b64\u800c\u8bbe\u8ba1\u3002 \u5e7f\u64ad\u94fe\u8def (broadcast link) \u80fd\u591f\u8ba9\u591a\u4e2a\u53d1\u9001\u548c\u63a5\u6536\u8282\u70b9\u63a5\u5165\u5230\u540c\u4e00\u4e2a\u5171\u4eab\u94fe\u8def\u4e0a\u3002\u5e7f\u64ad\u7684\u542b\u4e49\u662f\u5f53\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f20\u8f93\u4e00\u4e2a\u5e27\u65f6\uff0c\u4fe1\u9053\u5e7f\u64ad\u8be5\u5e27\uff0c\u6bcf\u4e2a\u5176\u4ed6\u8282\u70b9\u90fd\u6536\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u4ee5\u592a\u7f51\u548c\u65e0\u7ebf\u5c40\u57df\u7f51\u5747\u57fa\u4e8e\u6b64\u5b9e\u73b0\u3002","title":"Admonitions"},{"location":"test_tab/#nested-title-2","text":"","title":"Nested Title (2)"},{"location":"test_tab/#nested-title-3","text":"","title":"Nested Title (3)"},{"location":"test_tab/#nested-title-4","text":"","title":"Nested Title (4)"},{"location":"test_tab/#nested-title-5","text":"","title":"Nested Title (5)"},{"location":"test_tab/code/","text":"Inline Codes \ud83c\udfb6 \u51fd\u6570 Insert() \u63d2\u5165\u4e00\u4e2a\u7ed3\u70b9\uff0c\u901a\u8fc7 print(**kwargs) \u65b9\u6cd5\u8f93\u51fa\u53ef\u89c6\u5316\u4fe1\u606f Normal Code Blocks \ud83c\udfb6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } Tabbed Code Blocks \ud83c\udfb6 \u2003C\u2003 1 2 3 4 5 6 7 #include <stdio.h> /* main entry */ int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } \u2003C++\u2003 1 2 3 4 5 6 7 #include <iostream> /* main entry */ int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } \u2003Python\u2003 1 print ( 'Hello World!\") Codes In Admonition \ud83c\udfb6 Hello World 1 2 3 4 /* Hello, World ! */ int main () { printf ( \"Hello World!\" ); } RBTree Delete 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /* delete a node from rb-tree */ void Delete ( RBTree * tree , Node * z ) { Node * y = z ; Node * x ; Color yOrgColor = y -> color ; if ( z -> left == tree -> nil ) { x = z -> right ; Transplant ( tree , z , z -> right ); } else if ( z -> right == tree -> nil ) { x = z -> left ; Transplant ( tree , z , z -> left ); } else { y = Minimum ( tree , z -> right ); yOrgColor = y -> color ; x = y -> right ; if ( y -> parent == z ) { x -> parent = y ; // if z->right links to y directly and y->right links // to nil (i.e. x = nil), let nil->parent link to y } else { Transplant ( tree , y , y -> right ); y -> right = z -> right ; z -> right -> parent = y ; } Transplant ( tree , z , y ); y -> left = z -> left ; z -> left -> parent = y ; y -> color = z -> color ; // shift color } if ( yOrgColor == BLACK ) { DeleteFixup ( tree , x ); } } Tabbed Code In Admonition \ud83c\udfb6 Codes \u2003C\u2003 1 2 3 4 5 6 7 #include <stdio.h> /* main entry */ int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } \u2003C++\u2003 1 2 3 4 5 6 7 #include <iostream> /* main entry */ int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Codes \u2003C\u2003 1 2 3 4 5 6 7 #include <stdio.h> /* main entry */ int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } \u2003C++\u2003 1 2 3 4 5 6 7 #include <iostream> /* main entry */ int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Without Line Numbers \ud83c\udfb6 /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } Codes /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } Codes /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } }","title":"code"},{"location":"test_tab/code/#inline-codes","text":"\u51fd\u6570 Insert() \u63d2\u5165\u4e00\u4e2a\u7ed3\u70b9\uff0c\u901a\u8fc7 print(**kwargs) \u65b9\u6cd5\u8f93\u51fa\u53ef\u89c6\u5316\u4fe1\u606f","title":"Inline Codes"},{"location":"test_tab/code/#normal-code-blocks","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } }","title":"Normal Code Blocks"},{"location":"test_tab/code/#tabbed-code-blocks","text":"C\u2003 1 2 3 4 5 6 7 #include <stdio.h> /* main entry */ int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } \u2003C++\u2003 1 2 3 4 5 6 7 #include <iostream> /* main entry */ int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } \u2003Python\u2003 1 print ( 'Hello World!\")","title":"Tabbed Code Blocks"},{"location":"test_tab/code/#codes-in-admonition","text":"Hello World 1 2 3 4 /* Hello, World ! */ int main () { printf ( \"Hello World!\" ); } RBTree Delete 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /* delete a node from rb-tree */ void Delete ( RBTree * tree , Node * z ) { Node * y = z ; Node * x ; Color yOrgColor = y -> color ; if ( z -> left == tree -> nil ) { x = z -> right ; Transplant ( tree , z , z -> right ); } else if ( z -> right == tree -> nil ) { x = z -> left ; Transplant ( tree , z , z -> left ); } else { y = Minimum ( tree , z -> right ); yOrgColor = y -> color ; x = y -> right ; if ( y -> parent == z ) { x -> parent = y ; // if z->right links to y directly and y->right links // to nil (i.e. x = nil), let nil->parent link to y } else { Transplant ( tree , y , y -> right ); y -> right = z -> right ; z -> right -> parent = y ; } Transplant ( tree , z , y ); y -> left = z -> left ; z -> left -> parent = y ; y -> color = z -> color ; // shift color } if ( yOrgColor == BLACK ) { DeleteFixup ( tree , x ); } }","title":"Codes In Admonition"},{"location":"test_tab/code/#tabbed-code-in-admonition","text":"Codes \u2003C\u2003 1 2 3 4 5 6 7 #include <stdio.h> /* main entry */ int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } \u2003C++\u2003 1 2 3 4 5 6 7 #include <iostream> /* main entry */ int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Codes \u2003C\u2003 1 2 3 4 5 6 7 #include <stdio.h> /* main entry */ int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } \u2003C++\u2003 1 2 3 4 5 6 7 #include <iostream> /* main entry */ int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Tabbed Code In Admonition"},{"location":"test_tab/code/#without-line-numbers","text":"/* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } Codes /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } } Codes /* randomly select an element */ int RandomizedSelect ( int A [], int index , int left , int right ) { if ( left == right ) { return A [ left ]; } int i = RandomizedPartition ( A , left , right ); if ( i + 1 == index ) { return A [ i ]; } else if ( i + 1 < index ) { return RandomizedSelect ( A , index , i + 1 , right ); } else { return RandomizedSelect ( A , index , left , i - 1 ); } }","title":"Without Line Numbers"},{"location":"test_tab/nested/2/","text":"test nesting 2","title":"n2"}]}